// <auto-generated />
using DddInPractice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DddInPractice.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220303100701_CreateAtmEntity")]
    partial class CreateAtmEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DddInPractice.Domain.BoundedContext.Atms.AtmAggregate.Atm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<decimal>("MoneyCharged")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Atm", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            MoneyCharged = 0m
                        });
                });

            modelBuilder.Entity("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.Snack", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Snack", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Chocolate"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Soda"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Gum"
                        });
                });

            modelBuilder.Entity("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.SnackMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("SnackMachine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L
                        });
                });

            modelBuilder.Entity("DddInPractice.Domain.BoundedContext.Atms.AtmAggregate.Atm", b =>
                {
                    b.OwnsOne("DddInPractice.Domain.SharedKernel.Money", "MoneyInside", b1 =>
                        {
                            b1.Property<long>("AtmId")
                                .HasColumnType("bigint");

                            b1.Property<int>("FiveDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("FiveDollarCount");

                            b1.Property<int>("OneCentCount")
                                .HasColumnType("int")
                                .HasColumnName("OneCentCount");

                            b1.Property<int>("OneDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("OneDollarCount");

                            b1.Property<int>("QuarterCount")
                                .HasColumnType("int")
                                .HasColumnName("QuarterCount");

                            b1.Property<int>("TenCentCount")
                                .HasColumnType("int")
                                .HasColumnName("TenCentCount");

                            b1.Property<int>("TwentyDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("TwentyDollarCount");

                            b1.HasKey("AtmId");

                            b1.ToTable("Atm");

                            b1.WithOwner()
                                .HasForeignKey("AtmId");

                            b1.HasData(
                                new
                                {
                                    AtmId = 1L,
                                    FiveDollarCount = 100,
                                    OneCentCount = 100,
                                    OneDollarCount = 100,
                                    QuarterCount = 100,
                                    TenCentCount = 100,
                                    TwentyDollarCount = 100
                                });
                        });

                    b.Navigation("MoneyInside")
                        .IsRequired();
                });

            modelBuilder.Entity("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.SnackMachine", b =>
                {
                    b.OwnsMany("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.Slot", "Slots", b1 =>
                        {
                            b1.Property<long>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<long>("Id"), 1L, 1);

                            b1.Property<int>("Position")
                                .HasColumnType("int")
                                .HasColumnName("Position");

                            b1.Property<long>("SnackMachineId")
                                .HasColumnType("bigint");

                            b1.HasKey("Id");

                            b1.HasIndex("SnackMachineId");

                            b1.ToTable("Slot", (string)null);

                            b1.WithOwner("SnackMachine")
                                .HasForeignKey("SnackMachineId");

                            b1.OwnsOne("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.SnackPile", "SnackPile", b2 =>
                                {
                                    b2.Property<long>("SlotId")
                                        .HasColumnType("bigint");

                                    b2.Property<decimal>("Price")
                                        .HasPrecision(12, 2)
                                        .HasColumnType("decimal(12,2)")
                                        .HasColumnName("Price");

                                    b2.Property<int>("Quantity")
                                        .HasColumnType("int")
                                        .HasColumnName("Quantity");

                                    b2.Property<long>("SnackId")
                                        .HasColumnType("bigint")
                                        .HasColumnName("SnackId");

                                    b2.HasKey("SlotId");

                                    b2.HasIndex("SnackId");

                                    b2.ToTable("Slot");

                                    b2.WithOwner()
                                        .HasForeignKey("SlotId");

                                    b2.HasOne("DddInPractice.Domain.BoundedContext.SnackMachines.SnackMachineAggregate.Snack", "Snack")
                                        .WithMany()
                                        .HasForeignKey("SnackId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b2.Navigation("Snack");

                                    b2.HasData(
                                        new
                                        {
                                            SlotId = 1L,
                                            Price = 3m,
                                            Quantity = 10,
                                            SnackId = 1L
                                        },
                                        new
                                        {
                                            SlotId = 2L,
                                            Price = 2m,
                                            Quantity = 15,
                                            SnackId = 2L
                                        },
                                        new
                                        {
                                            SlotId = 3L,
                                            Price = 1m,
                                            Quantity = 20,
                                            SnackId = 3L
                                        });
                                });

                            b1.Navigation("SnackMachine");

                            b1.Navigation("SnackPile")
                                .IsRequired();

                            b1.HasData(
                                new
                                {
                                    Id = 1L,
                                    Position = 1,
                                    SnackMachineId = 1L
                                },
                                new
                                {
                                    Id = 2L,
                                    Position = 2,
                                    SnackMachineId = 1L
                                },
                                new
                                {
                                    Id = 3L,
                                    Position = 3,
                                    SnackMachineId = 1L
                                });
                        });

                    b.OwnsOne("DddInPractice.Domain.SharedKernel.Money", "MoneyInside", b1 =>
                        {
                            b1.Property<long>("SnackMachineId")
                                .HasColumnType("bigint");

                            b1.Property<int>("FiveDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("FiveDollarCount");

                            b1.Property<int>("OneCentCount")
                                .HasColumnType("int")
                                .HasColumnName("OneCentCount");

                            b1.Property<int>("OneDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("OneDollarCount");

                            b1.Property<int>("QuarterCount")
                                .HasColumnType("int")
                                .HasColumnName("QuarterCount");

                            b1.Property<int>("TenCentCount")
                                .HasColumnType("int")
                                .HasColumnName("TenCentCount");

                            b1.Property<int>("TwentyDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("TwentyDollarCount");

                            b1.HasKey("SnackMachineId");

                            b1.ToTable("SnackMachine");

                            b1.WithOwner()
                                .HasForeignKey("SnackMachineId");

                            b1.HasData(
                                new
                                {
                                    SnackMachineId = 1L,
                                    FiveDollarCount = 10,
                                    OneCentCount = 10,
                                    OneDollarCount = 10,
                                    QuarterCount = 10,
                                    TenCentCount = 10,
                                    TwentyDollarCount = 10
                                });
                        });

                    b.Navigation("MoneyInside")
                        .IsRequired();

                    b.Navigation("Slots");
                });
#pragma warning restore 612, 618
        }
    }
}
