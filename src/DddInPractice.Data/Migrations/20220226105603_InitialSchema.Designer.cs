// <auto-generated />
using DddInPractice.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DddInPractice.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220226105603_InitialSchema")]
    partial class InitialSchema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DddInPractice.Domain.SnackMachine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.HasKey("Id");

                    b.ToTable("SnackMachine", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1L
                        });
                });

            modelBuilder.Entity("DddInPractice.Domain.SnackMachine", b =>
                {
                    b.OwnsOne("DddInPractice.Domain.Money", "MoneyInside", b1 =>
                        {
                            b1.Property<long>("SnackMachineId")
                                .HasColumnType("bigint");

                            b1.Property<int>("FiveDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("FiveDollarCount");

                            b1.Property<int>("OneCentCount")
                                .HasColumnType("int")
                                .HasColumnName("OneCentCount");

                            b1.Property<int>("OneDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("OneDollarCount");

                            b1.Property<int>("QuarterCount")
                                .HasColumnType("int")
                                .HasColumnName("QuarterCount");

                            b1.Property<int>("TenCentCount")
                                .HasColumnType("int")
                                .HasColumnName("TenCentCount");

                            b1.Property<int>("TwentyDollarCount")
                                .HasColumnType("int")
                                .HasColumnName("TwentyDollarCount");

                            b1.HasKey("SnackMachineId");

                            b1.ToTable("SnackMachine");

                            b1.WithOwner()
                                .HasForeignKey("SnackMachineId");

                            b1.HasData(
                                new
                                {
                                    SnackMachineId = 1L,
                                    FiveDollarCount = 10,
                                    OneCentCount = 10,
                                    OneDollarCount = 10,
                                    QuarterCount = 10,
                                    TenCentCount = 10,
                                    TwentyDollarCount = 10
                                });
                        });

                    b.Navigation("MoneyInside")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
